/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.view.dnd;

import hr.algebra.dal.sql.ActorRepositorySql;
import hr.algebra.dal.sql.DirectorRepositorySql;
import hr.algebra.dal.sql.MovieActorRepositorySql;
import hr.algebra.dal.sql.SqlRepository;
import hr.algebra.model.Actor;
import hr.algebra.model.Director;
import hr.algebra.model.Movie;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.DropMode;
import javax.swing.JOptionPane;

/**
 *
 * @author ivanjerkovic
 */
public class ActorAndDirectorToMovie extends javax.swing.JPanel {

    private Movie selectedMovie;

    /**
     * Creates new form ActorAndDirectorToMovie
     */
    public ActorAndDirectorToMovie() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsActors = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsDirectors = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lsMovies = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfMovie = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        lsMovieActors = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        lsMovieDirectors = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAddActors = new javax.swing.JButton();
        btnAddDirectors = new javax.swing.JButton();
        btnAddMovies = new javax.swing.JButton();
        btnClearAll = new javax.swing.JButton();
        btnSaveMovieActors = new javax.swing.JButton();
        btnSaveMovieDirectors = new javax.swing.JButton();

        jLabel1.setText("Directors");

        jScrollPane1.setViewportView(lsActors);

        jScrollPane2.setViewportView(lsDirectors);

        jLabel2.setText("Actors");

        jScrollPane3.setViewportView(lsMovies);

        jLabel3.setText("Movies");

        jLabel4.setText("Movie:");

        tfMovie.setEditable(false);

        jScrollPane5.setViewportView(lsMovieActors);

        jScrollPane6.setViewportView(lsMovieDirectors);

        jLabel5.setText("Actors");

        jLabel6.setText("Director");

        btnAddActors.setText("Add Actors");
        btnAddActors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActorsActionPerformed(evt);
            }
        });

        btnAddDirectors.setText("Add Directors");
        btnAddDirectors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDirectorsActionPerformed(evt);
            }
        });

        btnAddMovies.setText("Add Movies");
        btnAddMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMoviesActionPerformed(evt);
            }
        });

        btnClearAll.setText("Clear All");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        btnSaveMovieActors.setText("Add Actors to Movie");
        btnSaveMovieActors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveMovieActorsActionPerformed(evt);
            }
        });

        btnSaveMovieDirectors.setText("Add Director to Movie");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(25, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfMovie))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(89, 89, 89))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(140, 140, 140)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnSaveMovieDirectors, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnSaveMovieActors, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddActors, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddDirectors, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddActors, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnAddDirectors, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnAddMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(jScrollPane6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveMovieActors, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaveMovieDirectors, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActorsActionPerformed
        lsActors.setDragEnabled(true);
        lsActors.setTransferHandler(new DefaultListTransferHandler<>(Actor.class));

        lsMovieActors.setDropMode(DropMode.INSERT);
        lsMovieActors.setTransferHandler(new DefaultListTransferHandler<>(Actor.class));

        try {
            ActorRepositorySql repo = new ActorRepositorySql();
            List<Actor> actorList = repo.selectActors();

            DefaultListModel<Actor> model = new DefaultListModel<>();
            for (Actor actor : actorList) {
                model.addElement(actor);
            }

            lsActors.setModel(model);
            lsMovieActors.setModel(new DefaultListModel<>());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading actors: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActorsActionPerformed

    private void btnAddDirectorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDirectorsActionPerformed
        lsDirectors.setDragEnabled(true);
        lsDirectors.setTransferHandler(new DefaultListTransferHandler<>(Director.class));

        lsMovieDirectors.setDropMode(DropMode.INSERT);
        lsMovieDirectors.setTransferHandler(new DefaultListTransferHandler<>(Director.class));

        try {
            DirectorRepositorySql repo = new DirectorRepositorySql();
            List<Director> directors = repo.selectDirectors();

            DefaultListModel<Director> model = new DefaultListModel<>();
            for (Director director : directors) {
                model.addElement(director);
            }

            lsDirectors.setModel(model);
            lsMovieDirectors.setModel(new DefaultListModel<>());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading actors: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddDirectorsActionPerformed

    private void btnAddMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMoviesActionPerformed
        try {
            SqlRepository repo = new SqlRepository();
            List<Movie> movies = repo.selectMovies();

            DefaultListModel<Movie> model = new DefaultListModel<>();
            for (Movie movie : movies) {
                model.addElement(movie);
            }

            lsMovies.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading actors: " + e.getMessage());
            e.printStackTrace();
        }

        lsMovies.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                selectedMovie = lsMovies.getSelectedValue();
                if (selectedMovie != null) {
                    tfMovie.setText(selectedMovie.getTitle());
                }
            }
        });
    }//GEN-LAST:event_btnAddMoviesActionPerformed

    private void btnSaveMovieActorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveMovieActorsActionPerformed
        if (selectedMovie == null) {
            JOptionPane.showMessageDialog(this, "Please select a movie.");
            return;
        }

        try {
            MovieActorRepositorySql repo = new MovieActorRepositorySql();

            // 1. cistin stare glumce
            repo.clearActorsMovie(selectedMovie.getId());

            // 2. dodajen nove
            DefaultListModel<Actor> model = (DefaultListModel<Actor>) lsMovieActors.getModel();
            for (int i = 0; i < model.size(); i++) {
                Actor actor = model.getElementAt(i);
                repo.addActorToMovie(selectedMovie.getId(), actor.getIdActor());
            }

            JOptionPane.showMessageDialog(this, "Actors successfully linked to movie!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveMovieActorsActionPerformed

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        lsActors.setModel(new DefaultListModel<>());
        lsDirectors.setModel(new DefaultListModel<>());
        lsMovies.setModel(new DefaultListModel<>());
        lsMovieActors.setModel(new DefaultListModel<>());
        lsMovieDirectors.setModel(new DefaultListModel<>());

        tfMovie.setText("");

        lsActors.clearSelection();
        lsDirectors.clearSelection();
        lsMovies.clearSelection();
        lsMovieActors.clearSelection();
        lsMovieDirectors.clearSelection();

        selectedMovie = null;
    }//GEN-LAST:event_btnClearAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddActors;
    private javax.swing.JButton btnAddDirectors;
    private javax.swing.JButton btnAddMovies;
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnSaveMovieActors;
    private javax.swing.JButton btnSaveMovieDirectors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JList<Actor> lsActors;
    private javax.swing.JList<Director> lsDirectors;
    private javax.swing.JList<Actor> lsMovieActors;
    private javax.swing.JList<Actor> lsMovieDirectors;
    private javax.swing.JList<Movie> lsMovies;
    private javax.swing.JTextField tfMovie;
    // End of variables declaration//GEN-END:variables
}
