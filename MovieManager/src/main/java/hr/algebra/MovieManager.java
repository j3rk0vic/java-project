/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra;

import hr.algebra.view.EditMoviesPanel;
import hr.algebra.view.UploadMoviesPanel;
import hr.algebra.view.auth.LoginPanel;
import hr.algebra.view.auth.RegisterPanel;
import hr.algebra.view.dnd.ActorAndDirectorToMovie;
import hr.algebra.view.entity.ActorPanel;
import hr.algebra.view.entity.DirectorPanel;
import hr.algebra.view.entity.GenrePanel;
import hr.algebra.view.user.UserPanel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 *
 * @author daniel.bele
 */
public class MovieManager extends javax.swing.JFrame {
    
    /**
     * Creates new form ArticleManager
     */
    public MovieManager() {
        initComponents();
        initPanels();
        restrictAccess();
        initMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        tpContent = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movie manager");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void initPanels() {
        tpContent.add(LOGIN, new LoginPanel(this));
        tpContent.add(AUTH, new RegisterPanel());
    }
    private static final String ACTOR_PANEL = "ACTOR PANEL";
    private static final String DIRECTOR_PANEL = "DIRECTOR PANEL";
    private static final String GENRE_PANEL = "GENRE PANEL";
    private static final String LOGIN = "LOGIN";
    private static final String AUTH = "REGISTER";
    private static final String DRAG_AND_DROP = "DRAG AND DROP";
    private static final String EDIT_MOVIES = "EDIT_MOVIES";
    private static final String UPLOAD_MOVIES = "UPLOAD_MOVIES";

    private void restrictAccess() {
        for (int i = tpContent.getTabCount() - 1; i >= 0; i--) {
            tpContent.setSelectedIndex(tpContent.indexOfTab(LOGIN));
        }

        tpContent.setSelectedIndex(tpContent.indexOfTab(LOGIN));
    }

    public void unlockApplication() {

        if (tpContent.indexOfTab(ACTOR_PANEL) == -1) {
            tpContent.add(ACTOR_PANEL, new ActorPanel());
            tpContent.add(DIRECTOR_PANEL, new DirectorPanel());
            tpContent.add(GENRE_PANEL, new GenrePanel());
            tpContent.add(UPLOAD_MOVIES, new UploadMoviesPanel());
            tpContent.add(EDIT_MOVIES, new EditMoviesPanel());
            tpContent.add(DRAG_AND_DROP, new ActorAndDirectorToMovie());
            tpContent.add(AUTH, new RegisterPanel());
            tpContent.add(LOGIN, new LoginPanel(this));
        }

        int loginIndex = tpContent.indexOfTab(LOGIN);
        if (loginIndex != -1) {
            tpContent.remove(loginIndex);
        }

        int authIndex = tpContent.indexOfTab(AUTH);
        if (authIndex != -1) {
            tpContent.remove(authIndex);
        }

        tpContent.setSelectedIndex(tpContent.indexOfTab(ACTOR_PANEL));
    }

    private static final String USER_PANEL = "USER PANEL";

    public void unlockUserView() {
        tpContent.add(USER_PANEL, new UserPanel());
    }

    private void initMenu() {
        JMenuBar menuBar = new JMenuBar();

        JMenu fileMenu = new JMenu("App");
        JMenuItem quitItem = new JMenuItem("Quit");

        quitItem.addActionListener(e -> System.exit(0));

        fileMenu.add(quitItem);
        menuBar.add(fileMenu);

        JMenu helpMenu = new JMenu("Help");
        JMenuItem aboutItem = new JMenuItem("About");

        aboutItem.addActionListener(e -> showAboutDialog());

        helpMenu.add(aboutItem);
        menuBar.add(helpMenu);

        setJMenuBar(menuBar);
    }

    private void showAboutDialog() {
        JOptionPane.showMessageDialog(this,
                "MovieManager v1.0\nMade by Ivan Jerkovic \nAlgebra 2025",
                "About",
                JOptionPane.INFORMATION_MESSAGE);
    }

}
